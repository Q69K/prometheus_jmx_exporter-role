---
#Remove previous jmx_exporter
- name: Stop Tomcat
  service:
    name: idealista-tomcat
    state: stopped

- name: Remove java agent artifact and conf
  file:
    dest: "{{ jmx_exporter_root_dir }}"
    state: absent
    recurse: true

- name: Remove java agent conf from setclasspath.sh
  blockinfile:
    insertafter: EOF
    dest: "{{ item.value.file }}"
    marker: "# jmx exporter {{ item.value.appName }} {mark}"
    block: "{{ item.value.block }}"
    owner: "{{ item.value.user | default('core') }}"
    group: "{{ item.value.group| default('core') }}"
    state: absent
  with_dict: "{{ jmx_exporter_app }}"

- name: Start service
  service:
    name: idealista-tomcat
    state: restarted

#Install new jmx_exporter
- name: Ensure idealista repo
  apt_repository:
    repo: "{{ jmx_exporter_repo }}"
    update_cache: yes

- name: Install jmx_exporter
  apt:
    pkg: jmx_prometheus_httpserver
    state: latest

- name: Ensure node exporter group
  group:
    name: "{{ jmx_exporter_group }}"

- name: Ensure node exporter user
  user:
    name: "{{ jmx_exporter_user }}"
    group: "{{ jmx_exporter_user }}"
    home: /bin/false

- name: Copy jmx_exporter config
  file:
    src: "{{ jmx_exporter_config }}"
    dest: /etc/jmx_exporter/jmx_exporter.yaml
    owner: "{{ jmx_exporter_user }}"
    group: "{{ jmx_exporter_user }}"
  notify: restart jmx_exporter

- name: Copy jmx_exporter daemon
  template:
    src: jmx_exporter_daemon.j2
    dest: /etc/init.d/jmx_exporter
    mode: 0755
  notify: restart jmx_exporter
    enabled: yes
    state:

- name: Register daemon
  service:
    name: jmx_exporter
    enabled: yes
    state: started
